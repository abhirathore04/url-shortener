# =============================================================================
# OpenTelemetry Collector Configuration
# Collects, processes, and exports telemetry data
# =============================================================================

receivers:
  # OTLP receiver for traces, metrics, and logs
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - "http://localhost:3000"
            - "http://localhost:8080"
  
  # Prometheus receiver for scraping metrics
  prometheus:
    config:
      scrape_configs:
        - job_name: 'url-shortener'
          scrape_interval: 15s
          static_configs:
            - targets: ['url-shortener:8080']
          metrics_path: '/metrics'
        
        - job_name: 'otel-collector'
          scrape_interval: 15s
          static_configs:
            - targets: ['localhost:8889']

processors:
  # Batch processor for performance
  batch:
    timeout: 1s
    send_batch_size: 1024
  
  # Resource processor to add service information
  resource:
    attributes:
      - key: service.name
        value: url-shortener
        action: upsert
      - key: service.version  
        value: 0.1.0
        action: upsert
      - key: deployment.environment
        value: development
        action: upsert
  
  # Memory limiter processor
  memory_limiter:
    limit_mib: 400
    spike_limit_mib: 100

exporters:
  # Prometheus exporter for metrics
  prometheus:
    endpoint: "0.0.0.0:8889"
    const_labels:
      service: url-shortener
    enable_open_metrics: true
  
  # Jaeger exporter for traces
  jaeger:
    endpoint: jaeger:14250
    tls:
      insecure: true
  
  # OTLP exporter for Prometheus
  otlphttp/prometheus:
    endpoint: http://prometheus:9090/api/v1/otlp
    tls:
      insecure: true
  
  # Logging exporter for debugging
  logging:
    loglevel: info
    sampling_initial: 5
    sampling_thereafter: 200

extensions:
  # Health check extension
  health_check:
    endpoint: 0.0.0.0:13133
  
  # Performance profiling
  pprof:
    endpoint: 0.0.0.0:1777
  
  # Z-Pages for debugging
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  
  pipelines:
    # Traces pipeline
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [jaeger, logging]
    
    # Metrics pipeline
    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, resource, batch]
      exporters: [prometheus, logging]
    
    # Logs pipeline
    logs:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [logging]

  telemetry:
    logs:
      level: "info"
    metrics:
      address: 0.0.0.0:8888
